#!/usr/bin/env python3
"""
Debug to File.
–û—Ç–ª–∞–¥–∫–∞ —Å –∑–∞–ø–∏—Å—å—é –≤ —Ñ–∞–π–ª.
"""

import os
import sys

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def debug_to_file():
    """–û—Ç–ª–∞–¥–∫–∞ —Å –∑–∞–ø–∏—Å—å—é –≤ —Ñ–∞–π–ª."""
    with open("debug_output.txt", "w", encoding="utf-8") as f:
        f.write("üîç –û—Ç–ª–∞–¥–∫–∞ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π...\n")
        f.write("=" * 60 + "\n")
        
        try:
            from core.shares_integration import SharesIntegrator
            f.write("‚úÖ SharesIntegrator –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω\n")
            
            # –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á
            api_key = None
            try:
                import streamlit as st
                if hasattr(st, 'secrets') and hasattr(st.secrets, 'TINKOFF_API_KEY'):
                    api_key = st.secrets.TINKOFF_API_KEY
                    f.write("‚úÖ API –∫–ª—é—á –∑–∞–≥—Ä—É–∂–µ–Ω –∏–∑ Streamlit secrets\n")
                else:
                    f.write("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Streamlit secrets\n")
            except ImportError:
                f.write("‚ùå Streamlit –Ω–µ –¥–æ—Å—Ç—É–ø–µ–Ω\n")
            
            if not api_key:
                f.write("‚ùå API –∫–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ .streamlit/secrets.toml\n")
                return
            
            integrator = SharesIntegrator()
            f.write("‚úÖ Integrator —Å–æ–∑–¥–∞–Ω\n")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É –≤—Å–µ—Ö –∞–∫—Ü–∏–π
            f.write("\nüìä –ó–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –∞–∫—Ü–∏–π (russian_only=False)...\n")
            f.write("-" * 50 + "\n")
            all_shares = integrator.load_shares_from_tinkoff_api(api_key, russian_only=False)
            f.write(f"–í—Å–µ–≥–æ –∞–∫—Ü–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(all_shares)}\n")
            
            if all_shares:
                f.write("\nüåç –ü—Ä–∏–º–µ—Ä—ã –≤—Å–µ—Ö –∞–∫—Ü–∏–π (–ø–µ—Ä–≤—ã–µ 10):\n")
                for i, share in enumerate(all_shares[:10]):
                    currency = share.get('currency', 'Unknown')
                    isin = share.get('isin', 'Unknown')
                    f.write(f"  {i+1:2d}. {share['ticker']:6s} - {share['name'][:30]:30s} ({currency}) [{isin}]\n")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞–ª—é—Ç
            f.write(f"\nüìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞–ª—é—Ç –≤—Å–µ—Ö –∞–∫—Ü–∏–π:\n")
            currencies_all = {}
            for share in all_shares:
                currency = share.get('currency', 'Unknown')
                currencies_all[currency] = currencies_all.get(currency, 0) + 1
            
            for currency, count in sorted(currencies_all.items()):
                f.write(f"  {currency}: {count} –∞–∫—Ü–∏–π\n")
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π
            f.write("\nüá∑üá∫ –ó–∞–≥—Ä—É–∑–∫–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π (russian_only=True)...\n")
            f.write("-" * 50 + "\n")
            russian_shares = integrator.load_shares_from_tinkoff_api(api_key, russian_only=True)
            f.write(f"–†–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π –∑–∞–≥—Ä—É–∂–µ–Ω–æ: {len(russian_shares)}\n")
            
            if russian_shares:
                f.write("\nüè¢ –ü—Ä–∏–º–µ—Ä—ã —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π (–ø–µ—Ä–≤—ã–µ 10):\n")
                for i, share in enumerate(russian_shares[:10]):
                    currency = share.get('currency', 'Unknown')
                    isin = share.get('isin', 'Unknown')
                    f.write(f"  {i+1:2d}. {share['ticker']:6s} - {share['name'][:30]:30s} ({currency}) [{isin}]\n")
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞–ª—é—Ç —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π
            f.write(f"\nüí± –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–∞–ª—é—Ç —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π:\n")
            currencies_ru = {}
            for share in russian_shares:
                currency = share.get('currency', 'Unknown')
                currencies_ru[currency] = currencies_ru.get(currency, 0) + 1
            
            for currency, count in sorted(currencies_ru.items()):
                f.write(f"  {currency}: {count} –∞–∫—Ü–∏–π\n")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤—Å–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∞–∫—Ü–∏–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ
            f.write(f"\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π:\n")
            non_russian_count = 0
            for share in russian_shares:
                currency = share.get('currency', '')
                isin = share.get('isin', '')
                if currency != 'RUB' and not isin.startswith('RU'):
                    non_russian_count += 1
                    f.write(f"  ‚ö†Ô∏è –ù–µ —Ä–æ—Å—Å–∏–π—Å–∫–∞—è –∞–∫—Ü–∏—è: {share['ticker']} - {share['name']} ({currency}) [{isin}]\n")
            
            if non_russian_count == 0:
                f.write("  ‚úÖ –í—Å–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –∞–∫—Ü–∏–∏ —è–≤–ª—è—é—Ç—Å—è —Ä–æ—Å—Å–∏–π—Å–∫–∏–º–∏!\n")
            else:
                f.write(f"  ‚ùå –ù–∞–π–¥–µ–Ω–æ {non_russian_count} –Ω–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π\n")
            
            # –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
            f.write(f"\nüìä –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤:\n")
            f.write(f"  –í—Å–µ–≥–æ –∞–∫—Ü–∏–π: {len(all_shares)}\n")
            f.write(f"  –†–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π: {len(russian_shares)}\n")
            if len(all_shares) > 0:
                f.write(f"  –≠–∫–æ–Ω–æ–º–∏—è: {len(all_shares) - len(russian_shares)} –∞–∫—Ü–∏–π ({((len(all_shares) - len(russian_shares)) / len(all_shares) * 100):.1f}%)\n")
            
            f.write("\n‚úÖ –û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!\n")
            
        except Exception as e:
            f.write(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ª–∞–¥–∫–∏: {e}\n")
            import traceback
            f.write(traceback.format_exc())

if __name__ == "__main__":
    debug_to_file()
    print("–û—Ç–ª–∞–¥–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ debug_output.txt")
