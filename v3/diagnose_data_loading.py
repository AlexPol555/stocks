#!/usr/bin/env python3
"""
Diagnose Data Loading.
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö.
"""

import sqlite3
import os
from datetime import datetime, timedelta

def diagnose_data_loading():
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö."""
    db_path = "stock_data.db"
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö...")
        print("=" * 60)
        
        # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–ø–∞–Ω–∏–π
        cursor.execute("SELECT COUNT(*) FROM companies")
        companies_count = cursor.fetchone()[0]
        print(f"üìä –í—Å–µ–≥–æ –∫–æ–º–ø–∞–Ω–∏–π –≤ –ë–î: {companies_count}")
        
        # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã—Ö
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table' AND name LIKE 'data_%'")
        data_tables = cursor.fetchall()
        
        print(f"\nüìà –¢–∞–±–ª–∏—Ü—ã –¥–∞–Ω–Ω—ã—Ö: {len(data_tables)}")
        
        total_records = 0
        for table in data_tables:
            table_name = table[0]
            cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
            count = cursor.fetchone()[0]
            total_records += count
            
            # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–∏–º–≤–æ–ª–∞—Ö
            cursor.execute(f"SELECT COUNT(DISTINCT symbol) FROM {table_name}")
            symbols_count = cursor.fetchone()[0]
            
            # –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –∑–∞–ø–∏—Å—å
            cursor.execute(f"SELECT MAX(datetime) FROM {table_name}")
            last_record = cursor.fetchone()[0]
            
            print(f"   - {table_name}:")
            print(f"     * –ó–∞–ø–∏—Å–µ–π: {count}")
            print(f"     * –°–∏–º–≤–æ–ª–æ–≤: {symbols_count}")
            print(f"     * –ü–æ—Å–ª–µ–¥–Ω—è—è –∑–∞–ø–∏—Å—å: {last_record}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä—ã —Å–∏–º–≤–æ–ª–æ–≤
            if symbols_count > 0:
                cursor.execute(f"SELECT DISTINCT symbol FROM {table_name} LIMIT 5")
                symbols = [row[0] for row in cursor.fetchall()]
                print(f"     * –ü—Ä–∏–º–µ—Ä—ã —Å–∏–º–≤–æ–ª–æ–≤: {', '.join(symbols)}")
        
        print(f"\nüìä –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π: {total_records}")
        
        # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ —Ä–∞–∑–Ω—ã–º —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º
        print(f"\n‚è∞ –ê–Ω–∞–ª–∏–∑ –ø–æ —Ç–∞–π–º—Ñ—Ä–µ–π–º–∞–º:")
        timeframes = ['1d', '1h', '1m', '5m', '15m']
        
        for tf in timeframes:
            table_name = f"data_{tf.replace('m', 'min').replace('h', 'hour')}"
            cursor.execute(f"SELECT name FROM sqlite_master WHERE type='table' AND name='{table_name}'")
            if cursor.fetchone():
                cursor.execute(f"SELECT COUNT(*) FROM {table_name}")
                count = cursor.fetchone()[0]
                cursor.execute(f"SELECT COUNT(DISTINCT symbol) FROM {table_name}")
                symbols = cursor.fetchone()[0]
                print(f"   - {tf}: {count} –∑–∞–ø–∏—Å–µ–π, {symbols} —Å–∏–º–≤–æ–ª–æ–≤")
            else:
                print(f"   - {tf}: —Ç–∞–±–ª–∏—Ü–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")
        
        # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–∏–º–≤–æ–ª–∞–º
        print(f"\nüìä –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –ø–æ —Å–∏–º–≤–æ–ª–∞–º:")
        for table in data_tables:
            table_name = table[0]
            cursor.execute(f"""
                SELECT symbol, COUNT(*) as count 
                FROM {table_name} 
                GROUP BY symbol 
                ORDER BY count DESC 
                LIMIT 10
            """)
            top_symbols = cursor.fetchall()
            
            if top_symbols:
                print(f"   {table_name} (—Ç–æ–ø-10):")
                for symbol, count in top_symbols:
                    print(f"     - {symbol}: {count} –∑–∞–ø–∏—Å–µ–π")
        
        # 5. –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞–Ω–Ω—ã—Ö
        print(f"\nüìÖ –í—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏–∞–ø–∞–∑–æ–Ω –¥–∞–Ω–Ω—ã—Ö:")
        for table in data_tables:
            table_name = table[0]
            cursor.execute(f"SELECT MIN(datetime), MAX(datetime) FROM {table_name}")
            min_date, max_date = cursor.fetchone()
            if min_date and max_date:
                print(f"   - {table_name}: {min_date} - {max_date}")
        
        # 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
        print(f"\nüí° –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:")
        
        if companies_count == 0:
            print("   ‚ùå –ù–µ—Ç –∫–æ–º–ø–∞–Ω–∏–π –≤ –ë–î. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö.")
        elif total_records == 0:
            print("   ‚ùå –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –≤ —Ç–∞–±–ª–∏—Ü–∞—Ö. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö.")
        elif total_records < companies_count * 10:
            print("   ‚ö†Ô∏è –ú–∞–ª–æ –¥–∞–Ω–Ω—ã—Ö. –í–æ–∑–º–æ–∂–Ω–æ, –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
            print("   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≤—Å–µ—Ö —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤.")
        else:
            print("   ‚úÖ –î–∞–Ω–Ω—ã–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        if len(data_tables) < 5:
            print("   ‚ö†Ô∏è –ù–µ –≤—Å–µ —Ç–∞–π–º—Ñ—Ä–µ–π–º—ã –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
            print("   üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö —Ç–∞–π–º—Ñ—Ä–µ–π–º–æ–≤.")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏: {e}")
    finally:
        conn.close()

if __name__ == "__main__":
    diagnose_data_loading()
