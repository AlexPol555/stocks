#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ News Pipeline
–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, —á—Ç–æ –≤—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –±–µ–∑ –æ—à–∏–±–æ–∫
"""

import sys
import traceback


def test_import(module_name: str, description: str = "") -> bool:
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –∏–º–ø–æ—Ä—Ç –º–æ–¥—É–ª—è."""
    try:
        __import__(module_name)
        print(f"‚úÖ {module_name} - {description}")
        return True
    except ImportError as e:
        print(f"‚ùå {module_name} - {description}")
        print(f"   –û—à–∏–±–∫–∞: {e}")
        return False
    except Exception as e:
        print(f"‚ö†Ô∏è  {module_name} - {description}")
        print(f"   –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {e}")
        return False


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è."""
    print("=== –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–æ–≤ News Pipeline ===")
    print()
    
    # –°–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    modules = [
        # –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏
        ("core", "–û—Å–Ω–æ–≤–Ω–æ–π –º–æ–¥—É–ª—å core"),
        ("core.news_pipeline", "–ú–æ–¥—É–ª—å –ø–∞–π–ø–ª–∞–π–Ω–∞ –Ω–æ–≤–æ—Å—Ç–µ–π"),
        ("core.news_pipeline.config", "–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –ø–∞–π–ø–ª–∞–π–Ω–∞"),
        ("core.news_pipeline.models", "–ú–æ–¥–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö"),
        ("core.news_pipeline.repository", "–†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"),
        ("core.news_pipeline.processor", "–ü—Ä–æ—Ü–µ—Å—Å–æ—Ä"),
        ("core.news_pipeline.progress", "–ü—Ä–æ–≥—Ä–µ—Å—Å"),
        ("core.news_pipeline.monitoring", "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"),
        ("core.news_pipeline.preprocessing", "–ü—Ä–µ–¥–æ–±—Ä–∞–±–æ—Ç–∫–∞"),
        ("core.news_pipeline.embeddings", "–≠–º–±–µ–¥–¥–∏–Ω–≥–∏"),
        ("core.news_pipeline.workflows", "–†–∞–±–æ—á–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"),
        
        # –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤
        ("core.news_pipeline.generators", "–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä—ã"),
        ("core.news_pipeline.generators.substring", "Substring –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä"),
        ("core.news_pipeline.generators.fuzzy", "Fuzzy –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä"),
        ("core.news_pipeline.generators.ner", "NER –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä"),
        ("core.news_pipeline.generators.semantic", "Semantic –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä"),
        
        # –î—Ä—É–≥–∏–µ –º–æ–¥—É–ª–∏
        ("core.database", "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö"),
        ("core.news", "–ù–æ–≤–æ—Å—Ç–∏"),
        ("core.analytics", "–ê–Ω–∞–ª–∏—Ç–∏–∫–∞"),
        ("core.indicators", "–ò–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã"),
        ("core.orders", "–ó–∞–∫–∞–∑—ã"),
        ("core.parser", "–ü–∞—Ä—Å–µ—Ä"),
        ("core.settings", "–ù–∞—Å—Ç—Ä–æ–π–∫–∏"),
        ("core.utils", "–£—Ç–∏–ª–∏—Ç—ã"),
        ("core.visualization", "–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è"),
    ]
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∏–º–ø–æ—Ä—Ç—ã
    success_count = 0
    total_count = len(modules)
    
    for module_name, description in modules:
        if test_import(module_name, description):
            success_count += 1
        print()
    
    # –†–µ–∑—É–ª—å—Ç–∞—Ç—ã
    print("=" * 50)
    print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç—ã: {success_count}/{total_count} –º–æ–¥—É–ª–µ–π –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ")
    
    if success_count == total_count:
        print("üéâ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print(f"‚ö†Ô∏è  {total_count - success_count} –º–æ–¥—É–ª–µ–π –Ω–µ —É–¥–∞–ª–æ—Å—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å")
        return 1


if __name__ == "__main__":
    sys.exit(main())
