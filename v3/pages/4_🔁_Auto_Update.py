# bootstrap
from pathlib import Path
import sys

def _add_paths():
    here = Path(__file__).resolve()
    root = here.parents[1]
    if str(root) not in sys.path:
        sys.path.insert(0, str(root))
    for sub in ("core", "services"):
        ep = root / sub
        if ep.exists() and str(ep) not in sys.path:
            sys.path.insert(0, str(ep))
    parent = root.parent
    if parent and str(parent) not in sys.path:
        sys.path.insert(0, str(parent))
_add_paths()
# -----

import streamlit as st

from core import ui
from core.utils import run_api_update_job, run_parser_incremental_job

ui.page_header("–ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ", "–ü–µ—Ä–µ—Å—á—ë—Ç –∫–æ—Ç–∏—Ä–æ–≤–æ–∫ –∏ –ø–∞—Ä—Å–∏–Ω–≥ –∏–∑ –≤–Ω–µ—à–Ω–∏—Ö –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤.", icon="üîÅ")

col_full, col_increment, col_parser = st.columns(3)

with col_full:
    if st.button("–ü–æ–ª–Ω—ã–π –ø–µ—Ä–µ—Å—á—ë—Ç", use_container_width=True):
        with st.spinner("–ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º —Ç–∏–∫–µ—Ä–∞–º..."):
            try:
                logs = run_api_update_job(full_update=True)
            except Exception as exc:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {exc}")
            else:
                st.success("–ü–æ–ª–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
                if logs:
                    st.write(logs)

with col_increment:
    if st.button("–î–æ–ø–æ–ª–Ω–∏—Ç—å –ø—Ä–æ–ø—É—Å–∫–∏", use_container_width=True):
        with st.spinner("–ü–æ–ª—É—á–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –±–∞—Ä—ã..."):
            try:
                logs = run_api_update_job(full_update=False)
            except Exception as exc:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏: {exc}")
            else:
                st.success("–ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ.")
                if logs:
                    st.write(logs)

with col_parser:
    if st.button("–ü–∞—Ä—Å–µ—Ä MOEX", use_container_width=True):
        with st.spinner("–ó–∞–ø—É—Å–∫–∞–µ–º —Å–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö –ø–æ MOEX..."):
            try:
                logs = run_parser_incremental_job()
            except Exception as exc:
                st.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥–µ MOEX: {exc}")
            else:
                st.success("–ò–Ω–∫—Ä–µ–º–µ–Ω—Ç–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä MOEX –∑–∞–≤–µ—Ä—à–∏–ª —Ä–∞–±–æ—Ç—É.")
                if logs:
                    st.write(logs)

st.caption("–ü–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç–µ –Ω–∞ –¥–∞—à–±–æ—Ä–¥, —á—Ç–æ–±—ã —É–±–µ–¥–∏—Ç—å—Å—è –≤ —Å–≤–µ–∂–µ—Å—Ç–∏ —Å–∏–≥–Ω–∞–ª–æ–≤.")
