# bootstrap
from pathlib import Path
import sys

def _add_paths():
    here = Path(__file__).resolve()
    root = here.parents[1]
    if str(root) not in sys.path:
        sys.path.insert(0, str(root))
    for sub in ("core", "services"):
        ep = root / sub
        if ep.exists() and str(ep) not in sys.path:
            sys.path.insert(0, str(ep))
    parent = root.parent
    if parent and str(parent) not in sys.path:
        sys.path.insert(0, str(parent))
_add_paths()
# -----

import importlib.util
from typing import Iterable

import streamlit as st

from core import ui

ui.page_header("–û—Ç–ª–∞–¥–∫–∞", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—É—Ç–µ–π, –º–æ–¥—É–ª–µ–π –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞.", icon="üß∞")

root = Path(__file__).resolve().parents[1]
st.write("–ö–æ—Ä–Ω–µ–≤–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è:", root)

ui.section_title("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤")
TARGETS = (
    "core/database.py",
    "core/analyzer.py",
    "core/populate.py",
    "core/indicators/__init__.py",
    "core/visualization.py",
    "core/jobs/auto_update.py",
    "core/orders/service.py",
    "core/data_loader.py",
)

for rel_path in TARGETS:
    exists = (root / rel_path).exists()
    st.write(f"{rel_path}:", "‚úÖ" if exists else "‚ö†Ô∏è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")

ui.section_title("–ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–º–ø–æ—Ä—Ç–∞")
MODULES: Iterable[str] = (
    "core.database",
    "core.analyzer",
    "core.populate",
    "core.indicators",
    "core.visualization",
    "core.jobs.auto_update",
    "core.orders.service",
    "core.data_loader",
)

status_rows = []
for module_name in MODULES:
    spec = importlib.util.find_spec(module_name)
    status_rows.append((module_name, "–û–ö" if spec else "NOT FOUND"))

st.table(status_rows)

ui.section_title("sys.path –ø–µ—Ä–≤—ã–µ 10 –∑–∞–ø–∏—Å–µ–π")
st.code("\n".join(sys.path[:10]), language="text")
