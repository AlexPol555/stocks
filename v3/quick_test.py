#!/usr/bin/env python3
"""
–ë—ã—Å—Ç—Ä–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Å–µ—Ö –∏–º–ø–æ—Ä—Ç–æ–≤ –¥–ª—è –º–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä–∞.
"""

def test_imports():
    """–¢–µ—Å—Ç –≤—Å–µ—Ö –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –∏–º–ø–æ—Ä—Ç–æ–≤."""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–º–ø–æ—Ä—Ç–æ–≤...")
    
    tests = [
        ("schedule", "import schedule"),
        ("websockets", "import websockets"),
        ("tinkoff.invest", "import tinkoff.invest"),
        ("RealMultiTimeframeStockAnalyzer", "from core.multi_timeframe_analyzer_real import RealMultiTimeframeStockAnalyzer"),
        ("TinkoffWebSocketProvider", "from core.tinkoff_websocket_provider import TinkoffWebSocketProvider"),
        ("EnhancedRealTimeDataManager", "from core.realtime_manager_enhanced import EnhancedRealTimeDataManager"),
        ("EnhancedDataUpdater", "from core.data_updater_enhanced import EnhancedDataUpdater"),
    ]
    
    success_count = 0
    total_count = len(tests)
    
    for name, import_statement in tests:
        try:
            exec(import_statement)
            print(f"‚úÖ {name} - OK")
            success_count += 1
        except ImportError as e:
            print(f"‚ùå {name} - –û–®–ò–ë–ö–ê: {e}")
        except Exception as e:
            print(f"‚ö†Ô∏è {name} - –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï: {e}")
            success_count += 1  # –°—á–∏—Ç–∞–µ–º –∫–∞–∫ —É—Å–ø–µ—Ö, –µ—Å–ª–∏ –º–æ–¥—É–ª—å –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç: {success_count}/{total_count} –º–æ–¥—É–ª–µ–π –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    
    if success_count == total_count:
        print("üéâ –í–°–ï –ó–ê–í–ò–°–ò–ú–û–°–¢–ò –£–°–¢–ê–ù–û–í–õ–ï–ù–´! –ú–Ω–æ–≥–æ—É—Ä–æ–≤–Ω–µ–≤—ã–π –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!")
        return True
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        return False

if __name__ == "__main__":
    test_imports()
